// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlatformApp.Service.DBContext;

#nullable disable

namespace PlatformApp.Service.Migrations
{
    [DbContext(typeof(PlatformAppDBContext))]
    [Migration("20240526035037_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlatformApp.Service.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "Suite 405 352 Waelchi Mission, Bednarhaven, AK 15529",
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(346),
                            FirstName = "Symone",
                            LastName = "Tobias",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(358)
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "17279 Herman Trail, Oberbrunnerland, VA 04806",
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(360),
                            FirstName = "Josefina",
                            LastName = "Mayfield",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(361)
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "Suite 934 4384 Sean Trace, Port Carrolport, SC 53835",
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(362),
                            FirstName = "Luke",
                            LastName = "Garrett",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(363)
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "Apt. 460 560 Powlowski Pike, New Shelaside, MN 74288-8673",
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(365),
                            FirstName = "Santana",
                            LastName = "Bergeron",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(365)
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "169 McLaughlin Viaduct, Wisokyton, VA 74079",
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(367),
                            FirstName = "Allen",
                            LastName = "Rollins",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(368)
                        });
                });

            modelBuilder.Entity("PlatformApp.Service.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductPrice")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(536),
                            CustomerId = 1,
                            ProductDescription = "synthesizer",
                            ProductName = "First Korg synthesizer",
                            ProductPrice = 10L,
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(537)
                        },
                        new
                        {
                            ProductId = 2,
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(540),
                            CustomerId = 1,
                            ProductDescription = "preset synthesizers",
                            ProductName = "Full polyphonic preset synthesizers",
                            ProductPrice = 20L,
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(541)
                        },
                        new
                        {
                            ProductId = 3,
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(543),
                            CustomerId = 2,
                            ProductDescription = "First Product",
                            ProductName = "Rhythm machine,",
                            ProductPrice = 30L,
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(544)
                        },
                        new
                        {
                            ProductId = 4,
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(546),
                            CustomerId = 2,
                            ProductDescription = "Key Punch",
                            ProductName = "Motor Drive Duplicating Key Punch",
                            ProductPrice = 40L,
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(546)
                        },
                        new
                        {
                            ProductId = 5,
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(548),
                            CustomerId = 3,
                            ProductDescription = "synthesizer",
                            ProductName = "First Korg synthesizer",
                            ProductPrice = 50L,
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(549)
                        },
                        new
                        {
                            ProductId = 6,
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(551),
                            CustomerId = 3,
                            ProductDescription = "Proof punch",
                            ProductName = "Printing Card Proof Punch",
                            ProductPrice = 50L,
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(552)
                        },
                        new
                        {
                            ProductId = 7,
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(553),
                            CustomerId = 4,
                            ProductDescription = "Accounting Machine",
                            ProductName = "Electric Accounting Machine",
                            ProductPrice = 10L,
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(554)
                        },
                        new
                        {
                            ProductId = 8,
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(556),
                            CustomerId = 4,
                            ProductDescription = "Tabulating model ",
                            ProductName = "Alphabetic Tabulating model ",
                            ProductPrice = 40L,
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(557)
                        },
                        new
                        {
                            ProductId = 9,
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(559),
                            CustomerId = 5,
                            ProductDescription = "TypeWriter",
                            ProductName = "IBM 870 Non-transmitting Typewriter",
                            ProductPrice = 30L,
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(559)
                        },
                        new
                        {
                            ProductId = 10,
                            CreatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(561),
                            CustomerId = 5,
                            ProductDescription = "fire-control instruments",
                            ProductName = "Aircraft and naval fire-control instruments",
                            ProductPrice = 20L,
                            Status = true,
                            UpdatedDate = new DateTime(2024, 5, 25, 21, 50, 37, 113, DateTimeKind.Local).AddTicks(562)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
